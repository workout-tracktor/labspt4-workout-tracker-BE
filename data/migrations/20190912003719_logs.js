exports.up = (knex) =>
    knex.schema.createTable('logs', tbl => {
        tbl.increments('id')
            .unique()
            .notNullable()
            .primary()
        tbl.text('log_id')
            .unique()
            .notNullable()
        tbl.text('user_id')
            .references('user_id')
            .inTable('users')
            .notNullable()
            .onDelete('CASCADE')
            .onUpdate('CASCADE')
        tbl.text('workout_id')
            .references('workout_id')
            .inTable('workouts')
            .notNullable()
            .onDelete('CASCADE')
            .onUpdate('CASCADE')
        tbl.text('exercise_id')
            .references('exercise_id')
            .inTable('exercises')
            .notNullable()
            .onDelete('CASCADE')
            .onUpdate('CASCADE')
        tbl.text('distance_units_id')
            .references('unit_id')
            .inTable('units')
            .onDelete('CASCADE')
            .onUpdate('CASCADE')
        tbl.text('weight_units_id')
            .references('unit_id')
            .inTable('units')
            .onDelete('CASCADE')
            .onUpdate('CASCADE')
        tbl.integer('reps')
        tbl.float('distance')
        tbl.float('weight')
        tbl.integer('duration')
        tbl.bool('workout_complete')
            .notNullable()
            .defaultTo(false)
        tbl.bigint('created_at')
            .notNullable()
        tbl.bigint('updated_at')
            .notNullable()
    })

exports.down = (knex) =>
    knex.schema.dropTableIfExists('logs')
